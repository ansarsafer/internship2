// app.js
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const studentModel = require('./models/student');
const classModel = require('./models/class');

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Create Student
app.post('/api/students', async (req, res) => {
    const student = new studentModel(req.body);
    try {
        await student.save();
        res.status(201).json(student);
    } catch (err) {
        res.status(400).json({ error: err.message });
    }
});

// Update Student's Class
app.put('/api/students/:id/class', async (req, res) => {
    try {
        const student = await studentModel.findByIdAndUpdate(req.params.id, {
            classId: req.body.classId
        }, { new: true });
        res.json(student);
    } catch (err) {
        res.status(400).json({ error: err.message });
    }
});

// Delete Student
app.delete('/api/students/:id', async (req, res) => {
    try {
        await studentModel.findByIdAndDelete(req.params.id);
        res.json({ message: 'Student deleted' });
    } catch (err) {
        res.status(404).json({ error: err.message });
    }
});

// Create Class
app.post('/api/classes', async (req, res) => {
    const class = new classModel(req.body);
    try {
        await class.save();
        res.status(201).json(class);
    } catch (err) {
        res.status(400).json({ error: err.message });
    }
});

// Delete Class
app.delete('/api/classes/:id', async (req, res) => {
    try {
        await classModel.findByIdAndDelete(req.params.id);
        res.json({ message: 'Class deleted' });
    } catch (err) {
        res.status(404).json({ error: err.message });
    }
});

// Read All Students in a Class
app.get('/api/classes/:classId/students', async (req, res) => {
    try {
        const students = await studentModel.find({ classId: req.params.classId });
        res.json(students);
    } catch (err) {
        res.status(404).json({ error: err.message });
    }
});

// Read All Students in a Standard
app.get('/api/standards/:standard/students', async (req, res) => {
    try
